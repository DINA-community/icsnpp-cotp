import cotp;

protocol analyzer COTP over UDP: parse with cotp::Tpdus;

on cotp::Tpdu ->
    event cotp::tpdu(
        $conn, $is_orig, context.calling_tsap, context.called_tsap, self._type, context.class
    );

on cotp::Tpdu if (self._type == cotp::TpduType::ConnectionRequest) -> 
    event cotp::connection_request(
        $conn, $is_orig, context.calling_tsap, context.called_tsap, context.class
    );

on cotp::Tpdu if (self._type == cotp::TpduType::ConnectionConfirm) -> 
    event cotp::connection_confirm(
        $conn, $is_orig, context.calling_tsap, context.called_tsap, context.class
    );

on cotp::Tpdu if (self._type == cotp::TpduType::DisconnectRequest) -> 
    event cotp::disconnect_request(
        $conn, $is_orig, context.calling_tsap, context.called_tsap, context.class
    );

on cotp::Tpdu if (self._type == cotp::TpduType::DisconnectConfirm) -> 
    event cotp::disconnect_confirm(
        $conn, $is_orig, context.calling_tsap, context.called_tsap, context.class
    );

on cotp::Tpdu if (self._type == cotp::TpduType::Data) -> 
    event cotp::data(
        $conn, $is_orig, context.calling_tsap, context.called_tsap, context.class, self.user_data, self.eot, False
    );

on cotp::Tpdu if (self._type == cotp::TpduType::ExpeditedData) -> 
    event cotp::data(
        $conn, $is_orig, context.calling_tsap, context.called_tsap, context.class, self.user_data, self.eot, True
    );

on cotp::Tpdu if (self._type == cotp::TpduType::Error) -> 
    event cotp::error(
        $conn, $is_orig, context.calling_tsap, context.called_tsap, context.class, self.reject_cause
    );
